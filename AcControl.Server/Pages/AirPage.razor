@page "/air"

@using AcControl.Server.Data
@using AcControl.Server.Data.Models
@using static AcControl.Server.Data.LuxPowerTekService
@using AcControl.Server.Pages.Components
@using ApexCharts
@using Microsoft.EntityFrameworkCore

@inject IDbContextFactory<HomeDbContext> HomeDbFactory

<PageTitle>Oal Home Air</PageTitle>

<h1>Air</h1>

<ApexChart Height="400" Options="this.ChartOptions" @ref="this.Chart">
    @foreach (var entryBySerial in this.CurrentDayEntries.GroupBy(e => e.SerialNumber))
    {
        var name = HumanName(this.ActiveSensorType)
        + " for "
        + (entryBySerial.Key switch
        {
            "404cca68ed94" => "Office",
            "84fce60705c4" => "Bedroom",
            _ => $"Unknown ({entryBySerial.Key})",
        });
        var colour = entryBySerial.Key switch
        {
            "404cca68ed94" => "#c7f464",
            "84fce60705c4" => "#3a9a93",
            _ => null,
        };

        Func<AirGradientSensorEntry, decimal?> valueFetcher = this.ActiveSensorType switch
        {
            AirGradientSensorType.WiFiStrength => e => Convert.ToDecimal(e.WiFiStrength),
            AirGradientSensorType.RCo2 => e => Convert.ToDecimal(e.RCo2),
            AirGradientSensorType.Pm01 => e => Convert.ToDecimal(e.Pm01),
            AirGradientSensorType.Pm02 => e => Convert.ToDecimal(e.Pm02),
            AirGradientSensorType.Pm10 => e => Convert.ToDecimal(e.Pm10),
            AirGradientSensorType.Pm003Count => e => Convert.ToDecimal(e.Pm003Count),
            AirGradientSensorType.Atmp => e => Convert.ToDecimal(e.Atmp),
            AirGradientSensorType.AtmpCompensated => e => Convert.ToDecimal(e.AtmpCompensated),
            AirGradientSensorType.Rhum => e => Convert.ToDecimal(e.Rhum),
            AirGradientSensorType.RhumCompensated => e => Convert.ToDecimal(e.RhumCompensated),
            AirGradientSensorType.TvocIndex => e => Convert.ToDecimal(e.TvocIndex),
            AirGradientSensorType.TvocRaw => e => Convert.ToDecimal(e.TvocRaw),
            AirGradientSensorType.NoxIndex => e => Convert.ToDecimal(e.NoxIndex),
            AirGradientSensorType.NoxRaw => e => Convert.ToDecimal(e.NoxRaw),
        };

        <ApexPointSeries Items="entryBySerial"
                         Name="@name"
                         SeriesType="SeriesType.Line"
                         Color="@colour"
                         XValue="e => e.DateTime.ToLocalTime()"
                         YValue="valueFetcher" />
    }
</ApexChart>

<div style="display:flex; gap:2em; flex-wrap:wrap; align-items: start;">
    <div style="display:flex; gap:1em; align-items:center;">
        <button @onclick="this.PreviousDate_Click">
            &lt;
        </button>
        <input type="date"
               value="@this.DateAsText"
               @oninput="this.DatePicker_Input"
               max="@(DateTime.Now.ToString("yyyy-MM-dd"))"
               style="text-align:center;" />
        <button @onclick="this.NextDate_Click" disabled="@(this.DateAsText == LuxPowerTekService.TodaysDateString)">
            &gt;
        </button>
        <button @onclick="this.RefreshButton_Click">
            Refresh
        </button>
    </div>

    <CascadingValue Value="this.ActiveSensorType">
        <CascadingValue Value="(Func<AirGradientSensorType, Task>)this.SensorTypeButton_Click">
            <div style="display:flex; gap:.5em; flex-direction:column; flex-wrap:wrap;">
                <AirGradientSensorTypeButton SensorType="AirGradientSensorType.Atmp" />
                <AirGradientSensorTypeButton SensorType="AirGradientSensorType.Rhum" />
            </div>
            <div style="display:grid; gap:.5em; grid-template-columns: minmax(0, 1fr) minmax(0, 1fr);">
                <AirGradientSensorTypeButton SensorType="AirGradientSensorType.Pm01" />
                <AirGradientSensorTypeButton SensorType="AirGradientSensorType.Pm02" />
                <AirGradientSensorTypeButton SensorType="AirGradientSensorType.Pm10" />
                <AirGradientSensorTypeButton SensorType="AirGradientSensorType.Pm003Count" />
            </div>
            <div style="display:grid; gap:.5em; grid-template-columns: minmax(0, 1fr) minmax(0, 1fr);">
                <AirGradientSensorTypeButton SensorType="AirGradientSensorType.RCo2" />
                <AirGradientSensorTypeButton SensorType="AirGradientSensorType.TvocRaw" />
                <AirGradientSensorTypeButton SensorType="AirGradientSensorType.NoxRaw" />
            </div>
            <div style="display:flex; gap:.5em; flex-direction:column; flex-wrap:wrap;">
                <AirGradientSensorTypeButton SensorType="AirGradientSensorType.WiFiStrength" />
            </div>
        </CascadingValue>
    </CascadingValue>
</div>
